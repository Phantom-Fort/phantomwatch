import subprocess
import json
import sys

from .utils import log_event, store_result, save_output

def search_exploit(query):
    """
    Searches for exploits using searchsploit.
    
    :param query: CVE ID or software name
    :return: JSON-formatted exploit results
    """
    try:
        # Run searchsploit with JSON output
        result = subprocess.run(["searchsploit", "--json", query], capture_output=True, text=True, check=True)
        exploits = json.loads(result.stdout)
        
        if "RESULTS_EXPLOIT" in exploits and exploits["RESULTS_EXPLOIT"]:
            log_event("Exploits found", exploits["RESULTS_EXPLOIT"])
            return exploits["RESULTS_EXPLOIT"]
        else:
            log_event("No exploits found for this query", {"query": query})
            return {"message": "No exploits found for this query."}
    
    except subprocess.CalledProcessError as e:
        log_event("SearchSploit command failed", {"error": str(e)})
        return {"error": f"SearchSploit command failed: {e}"}
    except json.JSONDecodeError:
        log_event("Failed to parse searchsploit output", {"query": query})
        return {"error": "Failed to parse searchsploit output. Ensure Exploit-DB is installed and updated."}

def run(query):
    results = search_exploit(query)
    save_output("exploit_results.json", results)
    store_result("../reports/exploit_results.json", results)
    print(json.dumps(results, indent=2))

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python -m modules.exploit_finder <CVE ID or software name>")
        sys.exit(1)
    
    query = sys.argv[1]
    run(query)