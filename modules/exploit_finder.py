import subprocess
import json
import argparse

def search_exploit(query):
    """
    Searches for exploits using searchsploit.
    
    :param query: CVE ID or software name
    :return: JSON-formatted exploit results
    """
    try:
        # Run searchsploit with JSON output
        result = subprocess.run(["searchsploit", "--json", query], capture_output=True, text=True, check=True)
        exploits = json.loads(result.stdout)
        
        if "RESULTS_EXPLOIT" in exploits and exploits["RESULTS_EXPLOIT"]:
            return exploits["RESULTS_EXPLOIT"]
        else:
            return {"message": "No exploits found for this query."}
    
    except subprocess.CalledProcessError as e:
        return {"error": f"SearchSploit command failed: {e}"}
    except json.JSONDecodeError:
        return {"error": "Failed to parse searchsploit output. Ensure Exploit-DB is installed and updated."}

def main():
    parser = argparse.ArgumentParser(description="Exploit Finder using searchsploit")
    parser.add_argument("query", type=str, help="CVE ID or software name to search")
    args = parser.parse_args()

    results = search_exploit(args.query)
    print(json.dumps(results, indent=2))

if __name__ == "__main__":
    main()
