import os
import json
from modules.incident_response import block_ip, block_domain, quarantine_file, isolate_host, fetch_threat_intel, save_output

def test_incident_response():
    print("[+] Running Incident Response Tests...")
    
    # Test Block IP
    test_ip = "192.168.1.100"
    print(f"[*] Blocking IP: {test_ip}")
    block_ip(test_ip)
    
    # Test Block Domain
    test_domain = "malicious.com"
    print(f"[*] Blocking Domain: {test_domain}")
    block_domain(test_domain)
    
    # Test Quarantine File
    test_file = "test_malware.txt"
    with open(test_file, "w") as f:
        f.write("Malware sample")
    print(f"[*] Quarantining File: {test_file}")
    quarantine_file(test_file)
    
    # Test Isolate Host
    print("[*] Isolating Host from Network")
    isolate_host()
    
    # Test Fetch Threat Intelligence
    test_ioc_type = "ip"
    test_value = "8.8.8.8"
    print(f"[*] Fetching Threat Intelligence for: {test_value}")
    results = fetch_threat_intel(test_ioc_type, test_value)
    print("[*] Threat Intelligence Result:", results)
    
    # Test Save Output
    output_file = "test_output.json"
    print(f"[*] Saving Output to {output_file}")
    save_output(results, output_file)
    
    # Verify Output File Exists
    if os.path.exists(output_file):
        print("[+] Output file created successfully!")
        with open(output_file, "r") as f:
            print(json.load(f))
    else:
        print("[-] Failed to create output file.")

if __name__ == "__main__":
    test_incident_response()
